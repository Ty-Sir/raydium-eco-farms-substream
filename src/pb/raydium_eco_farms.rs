// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RaydiumEcoFarmTransactions {
    #[prost(message, repeated, tag="1")]
    pub transactions: ::prost::alloc::vec::Vec<RaydiumFarmTransaction>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RaydiumFarmTransaction {
    #[prost(oneof="raydium_farm_transaction::Event", tags="1, 2, 3")]
    pub event: ::core::option::Option<raydium_farm_transaction::Event>,
}
/// Nested message and enum types in `RaydiumFarmTransaction`.
pub mod raydium_farm_transaction {
    #[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Event {
        #[prost(message, tag="1")]
        Initialize(super::InitializeTransaction),
        #[prost(message, tag="2")]
        RestartOrAdd(super::RestartOrAddTransaction),
        #[prost(message, tag="3")]
        NewReward(super::NewRewardTransaction),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InitializeTransaction {
    #[prost(string, tag="1")]
    pub signature: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub farm_id: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub user: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub lp_mint: ::prost::alloc::string::String,
    #[prost(uint32, tag="5")]
    pub start_time: u32,
    #[prost(uint32, tag="6")]
    pub end_time: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RestartOrAddTransaction {
    #[prost(string, tag="1")]
    pub signature: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub farm_id: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub user: ::prost::alloc::string::String,
    #[prost(uint32, tag="4")]
    pub start_time: u32,
    #[prost(uint32, tag="5")]
    pub end_time: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NewRewardTransaction {
    #[prost(string, tag="1")]
    pub signature: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub farm_id: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub user: ::prost::alloc::string::String,
    #[prost(uint32, tag="4")]
    pub start_time: u32,
    #[prost(uint32, tag="5")]
    pub end_time: u32,
}
// @@protoc_insertion_point(module)
